import { Networks } from "./blockchain";

const AVAX_MAINNET = {
    DAO_ADDRESS: "0xe7645fEd11A77A340C1161791bB984cE2E298273",
    MEMO_ADDRESS: "0x60f86811A25ad7a48670f72918a058c2de6a3916",
    TIME_ADDRESS: "0xfF7D1bA3181C7807A890F58B948f8D0327B3901b",
    MIM_ADDRESS: "0x130966628846BFd36ff31a822705796e8cb8C18D",
    STAKING_ADDRESS: "0xC8AcDb7da2B1Da1927053bB2Ec1e9B42CD05D663",
    STAKING_HELPER_ADDRESS: "0x8908A6A11Dec8D8eB307BA5E5268C9A1E89bd996",
    TIME_BONDING_CALC_ADDRESS: "0x819323613AbC79016f9D2443a65E9811545382a5",
    TREASURY_ADDRESS: "0x83Ad736197667b9d26325F3df55aE2795e089Fa8",
    ZAPIN_ADDRESS: "0xc669dC61aF974FdF50758d95306e4083D36f1430",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.AVAX) return AVAX_MAINNET;

    throw Error("Network don't support");
};
