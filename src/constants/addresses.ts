import { Networks } from "./blockchain";

const AVAX_MAINNET = {
    DAO_ADDRESS: "0x38c7D7a3378B6FbF44f2B1c24073e036D501F0da",
    MEMO_ADDRESS: "0x1870C590c128140fFBCE59ac40253E8b52126C3A",
    TIME_ADDRESS: "0x2876237da0861cB0C344a6747DBe5682C84B1980",
    MIM_ADDRESS: "0x3C7d80e5e2d7a4966aF9D642bD17C0481f645E5c",
    STAKING_ADDRESS: "0x3d5d6e121158B066AE3d749899e713fB72173512",
    STAKING_HELPER_ADDRESS: "0x4EfE2557c7bE51340DA3B3335d8df7e71FE7680a",
    TIME_BONDING_CALC_ADDRESS: "0xd150295011A3b7105B8939c28C2ED41e6dE19597",
    TREASURY_ADDRESS: "0xbbB06589C1b24e26d514a0449c66034FBA872B0f",
    ZAPIN_ADDRESS: "0xc669dC61aF974FdF50758d95306e4083D36f1430",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.AVAX) return AVAX_MAINNET;

    throw Error("Network don't support");
};
